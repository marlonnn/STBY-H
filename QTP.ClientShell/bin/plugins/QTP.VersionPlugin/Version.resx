<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="reflectionImage2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>